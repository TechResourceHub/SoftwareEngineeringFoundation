<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
		SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="What-is-a-Child-Process"
       title="What is a Child Process?"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">

	<deflist>
		<def title="Child Processes">
			<p>
				Although it may sound like something out of a parenting handbook or a psychological journal, the term
				child process actually has nothing to do with human development. If you run a Unix or Linux dedicated
				server, you have likely encountered child processes without even knowing it. Therefore, it is good to
				know what child processes are and how they work.
			</p>
			<p>
				A child process is a process created by another process. The creator process is properly called the
				“parent process”. The benefit of a child process is that it can start or stop at will without affecting
				the parent process. The child process is, however, is typically dependent on the parent process. If the
				parent process dies, the child process becomes an orphan process.
			</p>
			<p>
				In normal server operations, the kernel may initiate child processes, and other programs, such as
				Apache, may have them as well. Apache creates child processes (or children, if you prefer) whenever the
				number of requests (web page accesses from users) exceeds the maximum allowed number of requests. When
				the maximum number of child process requests is exceeded, another child process spawns.
			</p>
			<p>
				To view all running processes along with their child processes in a “tree” format, use the following
				command:
			</p>
			<code-block lang="shell">
				$ ps axf
			</code-block>
			<p>
				For more information about child processes, see this
				<a href="https://www.gnu.org/software/libc/manual/html_node/Processes.html#Processes">
					<format color="DarkOrange">documentation.</format>
				</a>
			</p>
		</def>
	</deflist>

</topic>