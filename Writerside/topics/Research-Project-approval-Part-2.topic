<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="Research-Project-approval-Part-2"
       title="Research &amp; Project approval (Part 2)"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">


    <deflist>
        <def title="Concepts">
            <i>
                For this project, we expect you to look at these concepts:
            </i>
            <list>
                <li>
                    <a href="3-Ways-to-Make-a-Portfolio-Project-Great.topic"/>
                </li>
                <li>
                    <a href="Portfolio-Project-Overview.topic"/>
                </li>
                <li>
                    <a href="Maze-project.topic"/>
                </li>
                <li>
                    <a href="Research-Project-Approval-Overview.topic"/>
                </li>
            </list>
        </def>
    </deflist>

    <procedure>
        <img alt="image_84.png" border-effect="rounded" src="image_84.png"/>
        <b>What’s the Minimum Viable Product (MVP)?</b>
        <tip>
            “A minimum viable product has just enough core features to effectively deploy the product, and no more.” –
            Wikipedia
        </tip>
        <p>
            Now that the team and the challenge are well defined, it is time to create a specification for the first
            version of your software. This is important because it is an opportunity to get the scope of the project
            right. If a project is too small in scope, it does not serve as an opportunity to expand your technical
            understanding, or present as impressive. When a project is too large in scope, the project will likely be
            incomplete by the end of the 2 weeks.
        </p>
    </procedure>
    <procedure id="some_things_to_think_about" title="Some things to think about">
        <b>User Experience</b>
        <p>
            Remember that one of the most important users to consider will be the recruiter and hiring manager that will
            be evaluating your work. It may be helpful to think through a user experience that can be accessed without
            creating an account or giving personal details.
        </p>
        <b>Scope</b>
        <p>
            For this project, consider that it is better to end up with something a bit smaller in scope that has
            undergone a couple (or at least one) iteration of deployment, testing and bug fixes. Documentation is also a
            big bonus!
        </p>
        <b>Shortcuts</b>
        <p>
            It is fine to find ways to speed up development by taking shortcuts, but it’s important to state these
            openly, and have a plan in place to amend these if there is time. An example might be to first read and
            write from files without using a database (as you did with Airbnb at first), or hard-coding some values.
            This might be a good strategy if the real challenge of your software lies elsewhere, and you want to first
            create an end-to-end proof of concept to demonstrate feasibility.
        </p>
        <deflist>
            <def title="Default Project">
                <p>
                    If you do not have an idea, and do not submit a proposal or do not gain approval for your proposed
                    projects, you’ll be expected to complete the 2D Game: <a href="Maze-project.topic">The Maze</a> -
                    concept page available on top of this project.
                </p>
            </def>
        </deflist>
    </procedure>

    <procedure id="tasks" title="Tasks">
        <deflist>
            <def title="0. Share your MVP specification">
                <p>
                    Share a link here to a <b>NEW Google Document</b> where each of the following tasks are addressed.
                </p>
            </def>
            <def title="1. Rename the document">
                <p>Rename the document to be the Project’s name and append <b>“MVP specification”</b></p>
            </def>
            <def title="2. Architecture">
                <p>In a section named <b>“Architecture”:</b></p>
                <list>
                    <li>
                        Include an illustration or diagram of the Portfolio Project’s MVP. This should include an
                        end-to-end map for the data flowing through your system. Each part of the diagram should be
                        clearly labeled.
                    </li>
                </list>
                <p>Here are some resources to learn more:</p>
                <list>
                    <li>
                        <a href="https://medium.com/storyblocks-engineering/web-architecture-101-a3224e126947">
                            Web Architecture 101
                        </a>
                    </li>
                    <li>
                        <a href="https://geekflare.com/best-software-architecture-diagram-tools/">
                            List of tools to create architecture diagrams
                        </a>
                    </li>
                    <li>
                        <a href="https://existek.com/blog/web-application-architecture/">
                            Web application Architecture
                        </a>
                    </li>
                </list>
            </def>
            <def title="3. APIs">
                <p>In a section called <b>“APIs and Methods”:</b></p>
                <list>
                    <li>
                        <p>
                            List and describe the API routes that will be created for your web client to communicate
                            with
                            your web server
                        </p>
                        <b>Example:</b>
                        <code-block lang="http request">
                            /api/rewards
                            GET: Returns a randomized array of ten rewards based on rarity for a user to win based on a
                            roll POST: Takes a user id and reward id and adds that to the user rewards table
                            /api/user
                            GET: Returns the user's information based on session id
                            /api/job_search
                            POST: Returns job's matching the parameters through GitHub Jobs API
                        </code-block>
                    </li>
                    <li>
                        <p>
                            List and describe any API endpoints or functions/methods that you will be creating to allow
                            any other client to use:
                        </p>
                        <b>Example</b>
                        <code-block lang="javascript">
                            class arrow.arrow.Arrow(year, month, day, hour=0, minute=0, second=0, microsecond=0,
                            tzinfo=None)
                            An Arrow object.
                            Implements the datetime interface, behaving as an aware datetime while implementing
                            additional functionality.

                            Parameters
                            year – the calendar year.
                            month – the calendar month.
                            day – the calendar day.
                            hour – (optional) the hour. Defaults to 0.
                            minute – (optional) the minute, Defaults to 0.
                            second – (optional) the second, Defaults to 0.
                            microsecond – (optional) the microsecond. Defaults 0.
                            tzinfo – (optional) A timezone expression. Defaults to UTC.
                            (source https://arrow.readthedocs.io/en/latest/#api-guide)
                        </code-block>
                    </li>
                    <li>
                        <p>
                            List and describe any 3rd party API that will be using:
                        </p>
                        <code-block lang="http request">
                            e.g. https://developer.twitter.com/en/docs/tweets/post-and-engage/overview
                            POST statuses/update
                            POST statuses/destroy/:id
                            GET statuses/show/:id
                            GET statuses/oembed
                            GET statuses/lookup
                        </code-block>
                    </li>
                </list>
                <note>
                    If there are no APIs used or provided, skip this section.
                </note>
            </def>
            <def title="4. Data Modelling">
                <p>
                    In a section named <b>“Data Model”:</b>
                </p>
                <list>
                    <li>
                        create a data model diagram to clarify how data will be stored
                    </li>
                </list>
                <b>
                    TOOLS: <a href="https://sqldbm.com/Home/">SqlDBM</a>
                </b>
                <img alt="image_85.png" border-effect="rounded" src="image_85.png"/>
            </def>
            <def title="5. User Stories">
                <p>
                    First, research what <a href="https://en.wikipedia.org/wiki/User_story">user stories</a> are, and
                    how to write them. Also note
                    <a href="https://blog.prototypr.io/stop-it-with-as-a-user-5feb9b38d920">some pitfalls</a> of
                    creating user stories that are too general.
                </p>
                <p>In the <b>“User Stories” section:</b></p>
                <list>
                    <li>Define 3-5 detailed user stories that will be satisfied when your MVP is complete.</li>
                </list>
            </def>
            <def title="6. Mockups">
                <img alt="image_86.png" border-effect="rounded" src="image_86.png"/>
                <p>
                    If there is any visual interface to your Portfolio Project, this section is required. If your
                    project lives on the commandline, or in script, then do not include this section. Use a prototyping
                    tool, like <a href="https://balsamiq.com/">Balsamiq</a>, to draft your user-facing visual
                    interfaces.
                </p>
                <p>In a section called <b>“Mockups”:</b></p>
                <list>
                    <li>
                        Include a mockup of each view that will need to be created for your MVP
                    </li>
                </list>
            </def>
        </deflist>
    </procedure>


</topic>