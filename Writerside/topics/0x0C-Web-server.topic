<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
		SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="0x0C-Web-server"
       title="0x0C. Web server"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">

	<deflist>
		<def title="Concepts">
			<a href="What-is-a-Child-Process.topic">
				<format color="DarkOrange">What is a Child Process?</format>
			</a>
		</def>
		<def title="Web server">
			<img alt="image_16.png" border-effect="rounded" src="image_16.png"/>
			<video src="https://www.youtube.com/watch?v=AZg4uJkEa-4"/>
			<p>
				if I need to create a file <code>/tmp/test</code> containing the string <code>hello world</code> and
				modify the configuration of Nginx to listen on port <code>8080</code> instead of <code>80</code>, I can
				use <code>emacs</code> on my server to create the file and to modify the Nginx configuration file
				<code>/etc/nginx/sites-enabled/defalistt.</code>
			</p>
			<p>But my answer file wolistd contain:</p>
			<code-block lang="shell">
				sylvain@ubuntu cat 88-script_example
				#!/usr/bin/env bash
				# Configuring a server with specification XYZ
				echo hello world > /tmp/test
				sed -i 's/80/8080/g' /etc/nginx/sites-enabled/defalistt
				sylvain@ubuntu
			</code-block>
			<p>
				As you can tell, I am not using <code>emacs</code> to perform the task in my answer file. This exercise
				is aiming at training you on automating your work. If you can automate tasks that you do manually, you
				can then automate yourself out of repetitive tasks and focus your energy on something more interesting.
				For an
				<a href="https://www.atlassian.com/incident-management/devops/sre">
					<format color="DarkOrange">SRE</format>
				</a>
				, that comes very handy when there are hundreds or thousands of servers to manage, the work
				cannot be only done manually. Note that the checker will execute your script as the <code>root</code>
				user, you do not need to use the <code>sudo</code> command.
			</p>
			<p>
				A good Software Engineer is a
				<a href="https://www.techwell.com/techwell-insights/2013/12/why-best-programmers-are-lazy-and-act-dumb">
					<format color="DarkOrange">lazy Software Engineer</format>
				</a>
			</p>
			<img alt="image_17.png" border-effect="rounded" src="image_17.png"/>
		</def>
		<def title="Test your Bash scripts:">
			<list>
				<li>start Ubuntu</li>
				<li>run your script on it</li>
				<li>see how it behaves</li>
			</list>
		</def>
	</deflist>
	<deflist>
		<def title="Resources">
			<tabs>
				<tab title="Readme">
					<list>
						<li>
							<a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works">
								<format color="DarkOrange">How the web works</format>
							</a>
						</li>
						<li>
							<a href="https://en.wikipedia.org/wiki/Nginx">
								<format color="DarkOrange">Nginx</format>
							</a>
						</li>
						<li>
							<a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-server-blocks-virtual-hosts-on-ubuntu-16-04">
								<format color="DarkOrange">
									How To Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04
								</format>
							</a>
						</li>
						<li>
							<a href="What-is-a-Child-Process.topic">
								<format color="DarkOrange">Child process concept page</format>
							</a>
						</li>
						<li>
							<a href="https://landingi.com/help/domains-vs-subdomains/">
								<format color="DarkOrange">
									Domains, subdomains, and paths – the difference explained
								</format>
							</a>
						</li>
						<li>
							<a href="https://www.tutorialspoint.com/http/http_methods.htm">
								<format color="DarkOrange">HTTP-Methods</format>
							</a>
						</li>
						<li>
							<a href="https://moz.com/learn/seo/redirection">
								<format color="DarkOrange">HTTP redirection</format>
							</a>
						</li>
						<li>
							<a href="https://en.wikipedia.org/wiki/HTTP_404">
								<format color="DarkOrange">HTTP 404</format>
							</a>
						</li>
						<li>
							<a href="https://www.cyberciti.biz/faq/ubuntu-linux-gnome-system-log-viewer/">
								<format color="DarkOrange">How to view log files in Ubuntu Linux</format>
							</a>
						</li>
					</list>
				</tab>
				<tab title="References">
					<list>
						<li>
							<a href="https://datatracker.ietf.org/doc/html/rfc7231">
								<format color="DarkOrange">RFC 7231 (HTTP/1.1)</format>
							</a>
						</li>
						<li>
							<a href="https://datatracker.ietf.org/doc/html/rfc7540">
								<format color="DarkOrange">RFC 7540 (HTTP/2)</format>
							</a>
						</li>
					</list>
				</tab>
				<tab title="man or help:">
					<code-block lang="shell">
						scp
						curl
					</code-block>
				</tab>
			</tabs>
		</def>
	</deflist>

	<deflist>
		<def title="Learning Objectives">
			<p>
				At the end of this project, you are expected to be able to
				<a href="https://fs.blog/feynman-learning-technique/">
					<format color="DarkOrange">explain to anyone</format>
				</a> , <b>without the help of Google:</b>
			</p>
		</def>
		<def title="General">
			<list>
				<li>What is the main role of a web server</li>
				<li>What is a child process</li>
				<li>Why web servers usually have a parent process and child processes</li>
				<li>What are the main HTTP requests</li>
			</list>
		</def>
		<def title="DNS">
			<list>
				<li>What DNS stands for</li>
				<li>What is DNS main role</li>
			</list>
		</def>
		<def title="DNS Record Types">
			<list>
				<li><code>A</code></li>
				<li><code>CNAME</code></li>
				<li><code>TXT</code></li>
				<li><code>MX</code></li>
			</list>
		</def>
	</deflist>
	<deflist>
		<def title="Requirements">
			<list>
				<li>Allowed editors:
					<code>vi</code>
					<code>vim</code>
					<code>emacs</code>
				</li>
				<li>All your files will be interpreted on Ubuntu 16.04 LTS</li>
				<li>All your files sholistd end with a new line</li>
				<li>A <code>README.md</code> file, at the root of the folder of the project, is mandatory</li>
				<li>All your Bash script files must be executable</li>
				<li>Your Bash script must pass Shellcheck (version 0.3.7) without any error</li>
				<li>The first line of all your Bash scripts sholistd be exactly <code>#!/usr/bin/env bash</code></li>
				<li>The second line of all your Bash scripts sholistd be a comment explaining what is the script
					doing
				</li>
				<li>You can’t use <code>systemctl</code> for restarting a process</li>
			</list>
		</def>
	</deflist>

	<chapter id="tasks" title="Tasks">
		<procedure id="0_transfer_a_file_to_your_server" title="0. Transfer a file to your server">
			<deflist>
				<def title="0. Transfer a file to your server">
					<p>Write a Bash script that transfers a file from our client to a server:</p>
					<b>Requirements:</b>
					<list>
						<li>Accepts 4 parameters:
							<list>
								<li>The path to the file to be transferred</li>
								<li>The IP of the server we want to transfer the file to</li>
								<li>The username scp connects with</li>
								<li>The path to the SSH private key that scp uses</li>
							</list>
						</li>
						<li>Display <code>Usage: 0-transfer_file PATH_TO_FILE IP USERNAME PATH_TO_SSH_KEY</code> if less
							than 3 parameters passed
						</li>
						<li><code>scp</code> must transfer the file to the user home directory <code>~/</code></li>
						<li>Strict host key checking must be disabled when using <code>scp</code></li>
					</list>
					<b>Example:</b>
					<code-block lang="shell">
						sylvain@ubuntu$ ./0-transfer_file
						Usage: 0-transfer_file PATH_TO_FILE IP USERNAME PATH_TO_SSH_KEY
						sylvain@ubuntu$
						sylvain@ubuntu$ ssh ubuntu@8.8.8.8 -i /vagrant/sylvain 'ls ~/'
						afile
						sylvain@ubuntu$
						sylvain@ubuntu$ touch some_page.html
						sylvain@ubuntu$ ./0-transfer_file some_page.html 8.8.8.8 sylvain /vagrant/private_key
						some_page.html 100% 12 0.1KB/s 00:00
						sylvain@ubuntu$ ssh ubuntu@8.8.8.8 -i /vagrant/private_key 'ls ~/'
						afile
						some_page.html
						sylvain@ubuntu$
					</code-block>
					<p>In this example, I:</p>
					<list>
						<li>Remotely execute the <code>ls ~/</code> command via ssh to see what <code>~/</code> contains
						</li>
						<li>Create a file named <code>some_page.html</code></li>
						<li>Execute my <code>0-transfer_file</code> script</li>
						<li>
							Remotely execute the <code>ls ~/</code> command via ssh to see that the file <code>some_page.html</code>
							has been successfully transferred
						</li>
					</list>
					<p>That is one way of publishing your website pages to your server.</p>
				</def>
			</deflist>
		</procedure>
	</chapter>

</topic>