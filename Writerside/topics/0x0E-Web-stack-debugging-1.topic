<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
		SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="0x0E-Web-stack-debugging-1"
       title="0x0E. Web stack debugging #1"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">

	<procedure id="0procedure3">
		<img alt="image_13.png" border-effect="rounded" src="image_13.png"/>
	</procedure>

	<deflist>
		<def id="concepts" title="Concepts">
			<i>For this project, we expect you to look at these concepts:</i>
			<list>
				<li>
					<a href="Network-basics.topic">
						<format color="DarkOrange">
							Networking basics
						</format>
					</a>
				</li>
				<li>
					<a href="Web-stack-debugging.topic">
						<format color="DarkOrange">
							Web stack debugging
						</format>
					</a>
				</li>
			</list>
		</def>
	</deflist>

	<procedure id="requirements" title="Requirements">
		<b>General</b>
		<list>
			<li>Allowed editors <code>vi, vim, emacs</code></li>
			<li>Ubuntu 20.04LTS</li>
			<li>All your files should end with a new file</li>
			<li> A <code>README.md</code> file at the root of the folder of the project is mandatory</li>
			<li> All your Bash script files must be executable</li>
			<li> Your Bash scripts must pass <code>Shellcheck</code> without any error</li>
			<li> Your Bash scripts must run without error</li>
			<li> The first line of all your Bash scripts should be exactly <code>#!/usr/bin/env bash</code></li>
			<li> The second line of all your Bash scripts should be a comment explaining what is the script doing</li>
			<li> You are not allowed to use <code>wget</code></li>
		</list>
	</procedure>

	<chapter id="tasks" title="Tasks">
		<procedure id="0_nginx_likes_port_80" title="0. Nginx likes port 80">
			<p>
				Using your debugging skills, find out what’s keeping your Ubuntu container’s Nginx installation from
				listening on port 80. Feel free to install whatever tool you need, start and destroy as many containers
				as you need to debug the issue. Then, write a Bash script with the minimum number of commands to
				automate your fix.
			</p>
			<step>
				<b>Requirements</b>
				<list>
					<li>
						Nginx must be running, and listening on port <code>80</code> of all the server’s active IPv4 IPs
					</li>
					<li>Write a Bash script that configures a server to the above requirements</li>
				</list>
			</step>
			<code-block include-lines="1-32" lang="shell"
			            src="alx-system_engineering-devops/0x0E-web_stack_debugging_1/console"/>
			<deflist>
				<def title="GitHub Repository:">
					<code>alx-system_engineering-devops</code>
				</def>
				<def title="Directory:">
					<code>0x0E-web_stack_debugging_1</code>
				</def>
				<def title="File:">
					<code>0-nginx_likes_port_80</code>
				</def>
			</deflist>
		</procedure>

		<procedure id="1_make_it_sweet_and_short" title="1. Make it sweet and short">
			<p>Using what you did for task #0, make your fix short and sweet.</p>
			<step>
				<b>Requirements</b>
				<list>
					<li>Your Bash script must be 5 lines long or less</li>
					<li>There must be a new line at the end of the file</li>
					<li>You must respect usual Bash script requirements</li>
					<li>You cannot use <code>;</code></li>
					<li>You cannot use <code>&amp;&amp;;</code></li>
					<li>You cannot use <code>wget</code></li>
					<li>
						You cannot execute your previous answer file (Do not include the name of the previous script in
						this one)
					</li>
					<li><code>service</code> (init) must say that <code>nginx</code> is not running ← for real</li>
				</list>
			</step>
			<code-block include-lines="34-69" lang="shell"
			            src="alx-system_engineering-devops/0x0E-web_stack_debugging_1/console"/>
			<deflist>
				<def title="GitHub Repository:">
					<code>alx-system_engineering-devops</code>
				</def>
				<def title="Directory:">
					<code>0x0E-web_stack_debugging_1</code>
				</def>
				<def title="File:">
					<code>1-debugging_made_short</code>
				</def>
			</deflist>
		</procedure>
	</chapter>

</topic>